%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, August 19, 2014 7:19:25 AM EDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
2.00000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
2.00000 w
0 J
1 j
q
q
7.00000 5.01704 381.493 349.975 rc
newpath
9.00000 8.01705 m
10.9794 15.2340 l
12.7017 21.4514 l
14.6386 28.3745 l
16.5884 35.2697 l
18.5289 42.0587 l
20.3280 48.2874 l
22.1908 54.6705 l
24.1174 61.2009 l
26.0378 67.6384 l
28.0131 74.1852 l
29.7530 79.8887 l
31.7117 86.2389 l
33.6785 92.5401 l
35.5738 98.5412 l
37.2949 103.930 l
39.3415 110.263 l
41.0752 115.564 l
43.0920 121.657 l
44.8771 126.984 l
46.8358 132.757 l
48.7008 138.185 l
50.6468 143.776 l
52.4338 148.846 l
54.3614 154.245 l
56.3636 159.776 l
58.1065 164.527 l
59.9888 169.592 l
61.9335 174.752 l
63.8360 179.729 l
65.6768 184.478 l
67.7206 189.673 l
69.5571 194.272 l
71.5180 199.109 l
73.2948 203.428 l
75.2374 208.079 l
77.0651 212.389 l
78.9757 216.824 l
80.8436 221.091 l
82.7991 225.486 l
84.6825 229.648 l
86.6086 233.834 l
88.5187 237.913 l
90.2739 241.598 l
92.2855 245.749 l
94.0848 249.394 l
96.0031 253.212 l
97.8393 256.798 l
99.8780 260.704 l
101.643 264.020 l
103.647 267.711 l
105.473 271.007 l
107.471 274.537 l
109.194 277.521 l
111.157 280.849 l
113.053 283.992 l
114.948 287.064 l
116.836 290.054 l
118.650 292.862 l
120.611 295.825 l
122.479 298.579 l
124.446 301.404 l
126.226 303.897 l
128.194 306.580 l
130.078 309.079 l
131.958 311.503 l
133.922 313.962 l
135.731 316.160 l
137.583 318.345 l
139.628 320.680 l
141.480 322.724 l
143.374 324.745 l
145.299 326.729 l
147.070 328.489 l
148.957 330.298 l
150.829 332.025 l
152.832 333.796 l
154.600 335.294 l
156.640 336.947 l
158.480 338.369 l
160.301 339.712 l
162.260 341.083 l
164.226 342.385 l
166.015 343.504 l
167.915 344.624 l
169.769 345.649 l
171.778 346.685 l
173.517 347.518 l
175.515 348.402 l
177.392 349.162 l
179.252 349.847 l
181.113 350.465 l
183.011 351.027 l
185.023 351.545 l
186.867 351.951 l
188.688 352.286 l
190.635 352.574 l
192.577 352.787 l
194.320 352.916 l
196.386 352.992 l
198.114 352.992 l
200.135 352.918 l
202.064 352.773 l
203.786 352.583 l
205.723 352.300 l
207.673 351.941 l
209.613 351.511 l
211.412 351.046 l
213.275 350.498 l
215.202 349.861 l
217.122 349.154 l
219.097 348.351 l
220.837 347.581 l
222.796 346.644 l
224.763 345.628 l
226.658 344.578 l
228.379 343.564 l
230.426 342.282 l
232.159 341.133 l
234.176 339.722 l
235.961 338.408 l
237.920 336.894 l
239.785 335.383 l
241.731 333.735 l
243.518 332.156 l
245.446 330.383 l
247.448 328.465 l
249.191 326.732 l
251.073 324.793 l
253.018 322.719 l
254.920 320.617 l
256.761 318.517 l
258.805 316.108 l
260.641 313.874 l
262.602 311.417 l
264.379 309.125 l
266.322 306.549 l
268.149 304.058 l
270.060 301.385 l
271.928 298.703 l
273.883 295.823 l
275.767 292.978 l
277.693 289.997 l
279.603 286.970 l
281.358 284.125 l
283.370 280.791 l
285.169 277.743 l
287.087 274.423 l
288.923 271.178 l
290.962 267.499 l
292.728 264.247 l
294.731 260.483 l
296.558 256.984 l
298.555 253.082 l
300.279 249.654 l
302.242 245.678 l
304.138 241.767 l
306.033 237.788 l
307.921 233.755 l
309.735 229.815 l
311.695 225.483 l
313.564 221.285 l
315.531 216.793 l
317.311 212.662 l
319.278 208.025 l
321.163 203.513 l
323.043 198.942 l
325.007 194.095 l
326.815 189.564 l
328.668 184.858 l
330.713 179.584 l
332.564 174.739 l
334.458 169.715 l
336.384 164.534 l
338.154 159.707 l
340.041 154.496 l
341.914 149.255 l
343.917 143.574 l
345.685 138.495 l
347.724 132.560 l
349.565 127.135 l
351.386 121.702 l
353.344 115.787 l
355.310 109.774 l
357.099 104.237 l
358.999 98.2892 l
360.853 92.4168 l
362.863 85.9754 l
364.602 80.3383 l
366.599 73.7913 l
368.477 67.5659 l
370.336 61.3330 l
372.197 55.0278 l
374.095 48.5274 l
376.107 41.5605 l
377.952 35.1033 l
379.773 28.6642 l
381.719 21.7095 l
383.662 14.6964 l
385.493 8.01705 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
9.00000 353.000 m
385.493 353.000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
161 374 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
9.00000 353.000 m
9.00000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 364 7 13 rc
newpath
16.7900 371.438 m
8.21000 371.438 l
8.21000 370.762 l
16.7900 370.762 l
h
f
Q
newpath
20.6430 366.392 m
20.1479 367.471 l
17.5581 367.471 l
16.9931 368.627 l
18.1145 368.792 19.0032 369.208 19.6591 369.877  c
20.2220 370.453 20.5034 371.130 20.5034 371.908  c
20.5034 372.361 20.4113 372.780 20.2272 373.165  c
20.0432 373.550 19.8115 373.878 19.5322 374.149  c
19.2529 374.420 18.9418 374.638 18.5991 374.803  c
18.1124 375.036 17.6131 375.152 17.1010 375.152  c
16.5848 375.152 16.2092 375.064 15.9743 374.888  c
15.7395 374.713 15.6220 374.519 15.6220 374.308  c
15.6220 374.189 15.6707 374.084 15.7680 373.993  c
15.8654 373.902 15.9881 373.857 16.1362 373.857  c
16.2462 373.857 16.3425 373.874 16.4250 373.908  c
16.5075 373.942 16.6482 374.028 16.8471 374.168  c
17.1645 374.388 17.4861 374.498 17.8120 374.498  c
18.3071 374.498 18.7419 374.311 19.1164 373.936  c
19.4909 373.562 19.6782 373.106 19.6782 372.568  c
19.6782 372.048 19.5110 371.562 19.1767 371.112  c
18.8424 370.661 18.3811 370.313 17.7929 370.067  c
17.3317 369.877 16.7032 369.767 15.9077 369.737  c
17.5581 366.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
72.0000 353.000 m
72.0000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
68 364 7 13 rc
newpath
78.7900 371.438 m
70.2100 371.438 l
70.2100 370.762 l
78.7900 370.762 l
h
f
Q
newpath
83.0493 371.826 m
83.0493 372.727 l
81.8940 372.727 l
81.8940 375.000 l
80.8466 375.000 l
80.8466 372.727 l
77.2031 372.727 l
77.2031 371.915 l
81.1958 366.214 l
81.8940 366.214 l
81.8940 371.826 l
h
80.8466 371.826 m
80.8466 367.554 l
77.8252 371.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
134.000 353.000 m
134.000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
131 364 7 13 rc
newpath
141.790 371.438 m
133.210 371.438 l
133.210 370.762 l
141.790 370.762 l
h
f
Q
newpath
140.660 368.030 m
140.905 367.450 141.215 367.003 141.590 366.687  c
141.964 366.372 142.431 366.214 142.989 366.214  c
143.679 366.214 144.208 366.439 144.576 366.887  c
144.856 367.222 144.995 367.579 144.995 367.960  c
144.995 368.586 144.602 369.234 143.814 369.902  c
144.343 370.110 144.743 370.406 145.014 370.791  c
145.285 371.176 145.420 371.629 145.420 372.149  c
145.420 372.894 145.183 373.540 144.710 374.085  c
144.092 374.796 143.197 375.152 142.024 375.152  c
141.445 375.152 141.050 375.080 140.841 374.936  c
140.631 374.792 140.526 374.638 140.526 374.473  c
140.526 374.350 140.576 374.242 140.676 374.149  c
140.775 374.056 140.895 374.009 141.034 374.009  c
141.140 374.009 141.248 374.026 141.358 374.060  c
141.430 374.081 141.593 374.158 141.847 374.292  c
142.101 374.425 142.276 374.504 142.374 374.530  c
142.530 374.576 142.697 374.600 142.875 374.600  c
143.307 374.600 143.682 374.432 144.002 374.098  c
144.321 373.764 144.481 373.368 144.481 372.911  c
144.481 372.577 144.407 372.251 144.259 371.934  c
144.149 371.697 144.028 371.517 143.897 371.394  c
143.715 371.225 143.465 371.071 143.148 370.934  c
142.831 370.796 142.507 370.728 142.177 370.728  c
141.974 370.728 l
141.974 370.537 l
142.308 370.495 142.643 370.374 142.980 370.175  c
143.316 369.976 143.561 369.737 143.713 369.458  c
143.865 369.179 143.941 368.872 143.941 368.538  c
143.941 368.102 143.805 367.749 143.532 367.481  c
143.259 367.212 142.919 367.078 142.513 367.078  c
141.857 367.078 141.309 367.429 140.869 368.131  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
197.000 353.000 m
197.000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
194 364 7 13 rc
newpath
204.790 371.438 m
196.210 371.438 l
196.210 370.762 l
204.790 370.762 l
h
f
Q
newpath
208.960 373.343 m
208.357 375.000 l
203.279 375.000 l
203.279 374.765 l
204.773 373.402 205.824 372.289 206.434 371.426  c
207.043 370.563 207.348 369.773 207.348 369.058  c
207.348 368.512 207.181 368.064 206.846 367.712  c
206.512 367.361 206.112 367.186 205.647 367.186  c
205.223 367.186 204.844 367.309 204.507 367.557  c
204.171 367.804 203.922 368.167 203.761 368.646  c
203.526 368.646 l
203.632 367.863 203.904 367.262 204.342 366.843  c
204.780 366.424 205.327 366.214 205.983 366.214  c
206.681 366.214 207.264 366.439 207.732 366.887  c
208.199 367.336 208.433 367.865 208.433 368.474  c
208.433 368.910 208.332 369.346 208.128 369.782  c
207.815 370.467 207.307 371.193 206.605 371.959  c
205.551 373.110 204.893 373.804 204.631 374.041  c
206.878 374.041 l
207.335 374.041 207.656 374.024 207.840 373.990  c
208.024 373.956 208.190 373.888 208.338 373.784  c
208.486 373.680 208.615 373.533 208.725 373.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
260.000 353.000 m
260.000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
256 364 7 13 rc
newpath
266.790 371.438 m
258.210 371.438 l
258.210 370.762 l
266.790 370.762 l
h
f
Q
newpath
266.523 367.236 m
268.618 366.214 l
268.827 366.214 l
268.827 373.482 l
268.827 373.965 268.847 374.265 268.887 374.384  c
268.928 374.502 269.011 374.593 269.138 374.657  c
269.265 374.720 269.523 374.756 269.913 374.765  c
269.913 375.000 l
266.675 375.000 l
266.675 374.765 l
267.082 374.756 267.344 374.721 267.462 374.660  c
267.581 374.599 267.663 374.516 267.710 374.412  c
267.757 374.309 267.780 373.999 267.780 373.482  c
267.780 368.836 l
267.780 368.210 267.759 367.808 267.716 367.630  c
267.687 367.495 267.633 367.395 267.554 367.332  c
267.476 367.268 267.382 367.236 267.272 367.236  c
267.115 367.236 266.897 367.302 266.618 367.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
323.000 353.000 m
323.000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
324.469 370.747 m
324.469 369.765 324.617 368.920 324.914 368.211  c
325.210 367.502 325.603 366.974 326.094 366.627  c
326.475 366.352 326.869 366.214 327.275 366.214  c
327.935 366.214 328.528 366.551 329.052 367.224  c
329.708 368.057 330.036 369.187 330.036 370.613  c
330.036 371.612 329.892 372.460 329.605 373.159  c
329.317 373.857 328.950 374.364 328.503 374.679  c
328.057 374.994 327.626 375.152 327.211 375.152  c
326.391 375.152 325.707 374.667 325.161 373.698  c
324.700 372.882 324.469 371.898 324.469 370.747  c
h
325.713 370.905 m
325.713 372.090 325.859 373.057 326.151 373.806  c
326.393 374.437 326.752 374.752 327.231 374.752  c
327.459 374.752 327.696 374.649 327.941 374.444  c
328.187 374.239 328.373 373.895 328.500 373.413  c
328.695 372.685 328.792 371.659 328.792 370.334  c
328.792 369.352 328.690 368.533 328.487 367.877  c
328.335 367.391 328.138 367.046 327.897 366.843  c
327.724 366.703 327.514 366.633 327.269 366.633  c
326.981 366.633 326.725 366.762 326.501 367.021  c
326.196 367.372 325.988 367.924 325.878 368.677  c
325.768 369.431 325.713 370.173 325.713 370.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
385.000 353.000 m
385.000 357.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
388.523 367.236 m
390.618 366.214 l
390.827 366.214 l
390.827 373.482 l
390.827 373.965 390.847 374.265 390.887 374.384  c
390.928 374.502 391.011 374.593 391.138 374.657  c
391.265 374.720 391.523 374.756 391.913 374.765  c
391.913 375.000 l
388.675 375.000 l
388.675 374.765 l
389.082 374.756 389.344 374.721 389.462 374.660  c
389.581 374.599 389.663 374.516 389.710 374.412  c
389.757 374.309 389.780 373.999 389.780 373.482  c
389.780 368.836 l
389.780 368.210 389.759 367.808 389.716 367.630  c
389.687 367.495 389.633 367.395 389.554 367.332  c
389.476 367.268 389.382 367.236 389.272 367.236  c
389.115 367.236 388.897 367.302 388.618 367.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
40.0000 353.000 m
40.0000 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
103.000 353.000 m
103.000 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
166.000 353.000 m
166.000 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
229.000 353.000 m
229.000 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
291.000 353.000 m
291.000 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
354.000 353.000 m
354.000 355.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
323.000 352.992 m
323.000 8.01705 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
296 173 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
323.000 353.000 m
319.000 353.000 l
S
Q
q
0 w
newpath
323.000 315.000 m
319.000 315.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
314.523 316.236 m
316.618 315.214 l
316.827 315.214 l
316.827 322.482 l
316.827 322.965 316.847 323.265 316.887 323.384  c
316.928 323.502 317.011 323.593 317.138 323.657  c
317.265 323.720 317.523 323.756 317.913 323.765  c
317.913 324.000 l
314.675 324.000 l
314.675 323.765 l
315.082 323.756 315.344 323.721 315.462 323.660  c
315.581 323.599 315.663 323.516 315.710 323.412  c
315.757 323.309 315.780 322.999 315.780 322.482  c
315.780 317.836 l
315.780 317.210 315.759 316.808 315.716 316.630  c
315.687 316.495 315.633 316.395 315.554 316.332  c
315.476 316.268 315.382 316.236 315.272 316.236  c
315.115 316.236 314.897 316.302 314.618 316.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
323.000 276.000 m
319.000 276.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
318.960 284.343 m
318.357 286.000 l
313.279 286.000 l
313.279 285.765 l
314.773 284.402 315.824 283.289 316.434 282.426  c
317.043 281.563 317.348 280.773 317.348 280.058  c
317.348 279.512 317.181 279.064 316.846 278.712  c
316.512 278.361 316.112 278.186 315.647 278.186  c
315.223 278.186 314.844 278.309 314.507 278.557  c
314.171 278.804 313.922 279.167 313.761 279.646  c
313.526 279.646 l
313.632 278.863 313.904 278.262 314.342 277.843  c
314.780 277.424 315.327 277.214 315.983 277.214  c
316.681 277.214 317.264 277.439 317.732 277.887  c
318.199 278.336 318.433 278.865 318.433 279.474  c
318.433 279.910 318.332 280.346 318.128 280.782  c
317.815 281.467 317.307 282.193 316.605 282.959  c
315.551 284.110 314.893 284.804 314.631 285.041  c
316.878 285.041 l
317.335 285.041 317.656 285.024 317.840 284.990  c
318.024 284.956 318.190 284.888 318.338 284.784  c
318.486 284.680 318.615 284.533 318.725 284.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
323.000 238.000 m
319.000 238.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
313.660 241.030 m
313.905 240.450 314.215 240.003 314.590 239.687  c
314.964 239.372 315.431 239.214 315.989 239.214  c
316.679 239.214 317.208 239.439 317.576 239.887  c
317.856 240.222 317.995 240.579 317.995 240.960  c
317.995 241.586 317.602 242.234 316.814 242.902  c
317.343 243.110 317.743 243.406 318.014 243.791  c
318.285 244.176 318.420 244.629 318.420 245.149  c
318.420 245.894 318.183 246.540 317.710 247.085  c
317.092 247.796 316.197 248.152 315.024 248.152  c
314.445 248.152 314.050 248.080 313.841 247.936  c
313.631 247.792 313.526 247.638 313.526 247.473  c
313.526 247.350 313.576 247.242 313.676 247.149  c
313.775 247.056 313.895 247.009 314.034 247.009  c
314.140 247.009 314.248 247.026 314.358 247.060  c
314.430 247.081 314.593 247.158 314.847 247.292  c
315.101 247.425 315.276 247.504 315.374 247.530  c
315.530 247.576 315.697 247.600 315.875 247.600  c
316.307 247.600 316.682 247.432 317.002 247.098  c
317.321 246.764 317.481 246.368 317.481 245.911  c
317.481 245.577 317.407 245.251 317.259 244.934  c
317.149 244.697 317.028 244.517 316.897 244.394  c
316.715 244.225 316.465 244.071 316.148 243.934  c
315.831 243.796 315.507 243.728 315.177 243.728  c
314.974 243.728 l
314.974 243.537 l
315.308 243.495 315.643 243.374 315.980 243.175  c
316.316 242.976 316.561 242.737 316.713 242.458  c
316.865 242.179 316.941 241.872 316.941 241.538  c
316.941 241.102 316.805 240.749 316.532 240.481  c
316.259 240.212 315.919 240.078 315.513 240.078  c
314.857 240.078 314.309 240.429 313.869 241.131  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
323.000 200.000 m
319.000 200.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
319.049 205.826 m
319.049 206.727 l
317.894 206.727 l
317.894 209.000 l
316.846 209.000 l
316.846 206.727 l
313.203 206.727 l
313.203 205.915 l
317.195 200.214 l
317.894 200.214 l
317.894 205.826 l
h
316.846 205.826 m
316.846 201.554 l
313.825 205.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
323.000 161.000 m
319.000 161.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
318.643 162.392 m
318.147 163.471 l
315.558 163.471 l
314.993 164.627 l
316.114 164.792 317.003 165.208 317.659 165.877  c
318.222 166.453 318.503 167.130 318.503 167.908  c
318.503 168.361 318.411 168.780 318.227 169.165  c
318.043 169.550 317.811 169.878 317.532 170.149  c
317.252 170.420 316.941 170.638 316.599 170.803  c
316.112 171.036 315.613 171.152 315.101 171.152  c
314.584 171.152 314.209 171.064 313.974 170.888  c
313.739 170.713 313.622 170.519 313.622 170.308  c
313.622 170.189 313.670 170.084 313.768 169.993  c
313.865 169.902 313.988 169.857 314.136 169.857  c
314.246 169.857 314.342 169.874 314.425 169.908  c
314.507 169.942 314.648 170.028 314.847 170.168  c
315.164 170.388 315.486 170.498 315.812 170.498  c
316.307 170.498 316.741 170.311 317.116 169.936  c
317.491 169.562 317.678 169.106 317.678 168.568  c
317.678 168.048 317.511 167.562 317.176 167.112  c
316.842 166.661 316.381 166.313 315.793 166.067  c
315.331 165.877 314.703 165.767 313.907 165.737  c
315.558 162.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
323.000 123.000 m
319.000 123.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
318.827 124.214 m
318.827 124.449 l
318.268 124.504 317.812 124.615 317.459 124.783  c
317.105 124.950 316.756 125.205 316.411 125.547  c
316.067 125.890 315.781 126.272 315.554 126.693  c
315.328 127.114 315.139 127.615 314.986 128.194  c
315.596 127.775 316.207 127.566 316.821 127.566  c
317.409 127.566 317.919 127.803 318.351 128.277  c
318.782 128.751 318.998 129.360 318.998 130.105  c
318.998 130.824 318.780 131.480 318.344 132.073  c
317.820 132.792 317.126 133.152 316.262 133.152  c
315.674 133.152 315.175 132.957 314.764 132.568  c
313.960 131.810 313.558 130.829 313.558 129.623  c
313.558 128.852 313.713 128.120 314.022 127.426  c
314.330 126.732 314.772 126.117 315.345 125.579  c
315.918 125.042 316.467 124.680 316.992 124.494  c
317.517 124.307 318.006 124.214 318.459 124.214  c
h
314.878 128.658 m
314.802 129.229 314.764 129.690 314.764 130.042  c
314.764 130.448 314.839 130.889 314.990 131.365  c
315.140 131.841 315.363 132.219 315.659 132.498  c
315.875 132.697 316.137 132.796 316.446 132.796  c
316.814 132.796 317.144 132.623 317.433 132.276  c
317.723 131.929 317.868 131.434 317.868 130.791  c
317.868 130.067 317.724 129.441 317.437 128.912  c
317.149 128.383 316.740 128.118 316.211 128.118  c
316.051 128.118 315.878 128.152 315.694 128.220  c
315.510 128.287 315.238 128.433 314.878 128.658  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
323.000 85.0000 m
319.000 85.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
314.307 85.3925 m
318.922 85.3925 l
318.922 85.6337 l
316.053 94.1777 l
315.342 94.1777 l
317.913 86.4272 l
315.545 86.4272 l
315.067 86.4272 314.726 86.4843 314.523 86.5986  c
314.168 86.7932 313.882 87.0937 313.666 87.5000  c
313.482 87.4301 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
323.000 46.0000 m
319.000 46.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
315.494 51.6645 m
314.813 51.1059 314.374 50.6573 314.177 50.3188  c
313.980 49.9803 313.882 49.6290 313.882 49.2651  c
313.882 48.7065 314.098 48.2251 314.529 47.8210  c
314.961 47.4169 315.534 47.2148 316.250 47.2148  c
316.944 47.2148 317.502 47.4031 317.925 47.7797  c
318.349 48.1564 318.560 48.5859 318.560 49.0683  c
318.560 49.3899 318.446 49.7179 318.217 50.0522  c
317.989 50.3865 317.513 50.7801 316.789 51.2329  c
317.534 51.8084 318.027 52.2612 318.268 52.5913  c
318.590 53.0229 318.751 53.4778 318.751 53.9560  c
318.751 54.5612 318.520 55.0785 318.059 55.5080  c
317.597 55.9375 316.992 56.1523 316.243 56.1523  c
315.426 56.1523 314.790 55.8963 314.333 55.3842  c
313.969 54.9738 313.787 54.5252 313.787 54.0385  c
313.787 53.6577 313.915 53.2800 314.171 52.9055  c
314.427 52.5310 314.868 52.1173 315.494 51.6645  c
h
316.491 50.9853 m
316.999 50.5283 317.320 50.1675 317.456 49.9030  c
317.591 49.6385 317.659 49.3391 317.659 49.0048  c
317.659 48.5605 317.534 48.2124 317.284 47.9606  c
317.035 47.7089 316.694 47.5830 316.262 47.5830  c
315.831 47.5830 315.479 47.7078 315.209 47.9575  c
314.938 48.2071 314.802 48.4991 314.802 48.8335  c
314.802 49.0535 314.858 49.2736 314.970 49.4936  c
315.083 49.7137 315.242 49.9231 315.450 50.1220  c
h
315.793 51.9057 m
315.441 52.2019 315.181 52.5246 315.012 52.8737  c
314.842 53.2229 314.758 53.6005 314.758 54.0068  c
314.758 54.5527 314.907 54.9896 315.205 55.3176  c
315.504 55.6455 315.884 55.8095 316.345 55.8095  c
316.802 55.8095 317.168 55.6805 317.443 55.4223  c
317.718 55.1642 317.856 54.8510 317.856 54.4829  c
317.856 54.1782 317.775 53.9052 317.614 53.6640  c
317.314 53.2154 316.707 52.6293 315.793 51.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
323.000 8.00000 m
319.000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
313.685 18.1777 m
313.685 17.9428 l
314.235 17.9344 314.747 17.8064 315.221 17.5588  c
315.695 17.3112 316.153 16.8785 316.595 16.2607  c
317.038 15.6429 317.346 14.9637 317.519 14.2231  c
316.855 14.6505 316.254 14.8642 315.716 14.8642  c
315.111 14.8642 314.593 14.6304 314.161 14.1628  c
313.730 13.6952 313.514 13.0742 313.514 12.2998  c
313.514 11.5465 313.730 10.8758 314.161 10.2876  c
314.682 9.57242 315.361 9.21484 316.199 9.21484  c
316.905 9.21484 317.511 9.50683 318.014 10.0908  c
318.632 10.8144 318.941 11.7073 318.941 12.7695  c
318.941 13.7259 318.706 14.6177 318.236 15.4450  c
317.767 16.2723 317.113 16.9589 316.275 17.5048  c
315.594 17.9534 314.851 18.1777 314.047 18.1777  c
h
317.621 13.7534 m
317.697 13.2032 317.735 12.7631 317.735 12.4331  c
317.735 12.0226 317.665 11.5793 317.525 11.1032  c
317.386 10.6272 317.188 10.2622 316.932 10.0083  c
316.676 9.75439 316.385 9.62744 316.059 9.62744  c
315.682 9.62744 315.352 9.79671 315.069 10.1352  c
314.785 10.4738 314.644 10.9773 314.644 11.6460  c
314.644 12.5389 314.832 13.2371 315.209 13.7407  c
315.484 14.1046 315.822 14.2866 316.224 14.2866  c
316.419 14.2866 316.649 14.2400 316.916 14.1469  c
317.183 14.0538 317.418 13.9226 317.621 13.7534  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
323.000 334.000 m
321.000 334.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
323.000 296.000 m
321.000 296.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
323.000 257.000 m
321.000 257.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
323.000 219.000 m
321.000 219.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
323.000 181.000 m
321.000 181.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
323.000 142.000 m
321.000 142.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
323.000 104.000 m
321.000 104.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
323.000 66.0000 m
321.000 66.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
323.000 27.0000 m
321.000 27.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
