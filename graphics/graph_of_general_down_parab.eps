%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, August 19, 2014 7:21:26 AM EDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
2.00000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
2.00000 w
0 J
1 j
q
q
7.00000 1.82177 381.493 387.178 rc
newpath
9.00000 260.658 m
10.9794 254.714 l
12.7017 249.600 l
14.6386 243.911 l
16.5884 238.252 l
18.5289 232.688 l
20.3280 227.589 l
22.1908 222.370 l
24.1174 217.037 l
26.0378 211.788 l
28.0131 206.457 l
29.7530 201.819 l
31.7117 196.662 l
33.6785 191.553 l
35.5738 186.694 l
37.2949 182.338 l
39.3415 177.226 l
41.0752 172.955 l
43.0920 168.053 l
44.8771 163.775 l
46.8358 159.146 l
48.7008 154.803 l
50.6468 150.336 l
52.4338 146.294 l
54.3614 141.998 l
56.3636 137.606 l
58.1065 133.841 l
59.9888 129.835 l
61.9335 125.763 l
63.8360 121.845 l
65.6768 118.115 l
67.7206 114.044 l
69.5571 110.450 l
71.5180 106.679 l
73.2948 103.321 l
75.2374 99.7149 l
77.0651 96.3826 l
78.9757 92.9631 l
80.8436 89.6828 l
82.7991 86.3154 l
84.6825 83.1365 l
86.6086 79.9511 l
88.5187 76.8573 l
90.2739 74.0718 l
92.2855 70.9469 l
94.0848 68.2130 l
96.0031 65.3616 l
97.8393 62.6940 l
99.8780 59.8024 l
101.643 57.3583 l
103.647 54.6515 l
105.473 52.2469 l
107.471 49.6848 l
109.194 47.5313 l
111.157 45.1432 l
113.053 42.9016 l
114.948 40.7255 l
116.836 38.6211 l
118.650 36.6593 l
120.611 34.6044 l
122.479 32.7098 l
124.446 30.7830 l
126.226 29.0983 l
128.194 27.3020 l
130.078 25.6462 l
131.958 24.0576 l
133.922 22.4655 l
135.731 21.0600 l
137.583 19.6809 l
139.628 18.2293 l
141.480 16.9793 l
143.374 15.7642 l
145.299 14.5940 l
147.070 13.5767 l
148.957 12.5538 l
150.829 11.6015 l
152.832 10.6520 l
154.600 9.87350 l
156.640 9.04449 l
158.480 8.36001 l
160.301 7.74221 l
162.260 7.14382 l
164.226 6.61181 l
166.015 6.18762 l
167.915 5.79962 l
169.769 5.48300 l
171.778 5.20898 l
173.517 5.02999 l
175.515 4.89096 l
177.392 4.82507 l
179.252 4.82177 l
181.113 4.88018 l
183.011 5.00335 l
185.023 5.20401 l
186.867 5.45141 l
188.688 5.75509 l
190.635 6.14514 l
192.577 6.60162 l
194.320 7.06863 l
196.386 7.69195 l
198.114 8.27194 l
200.135 9.01782 l
202.064 9.79760 l
203.786 10.5499 l
205.723 11.4591 l
207.673 12.4419 l
209.613 13.4873 l
211.412 14.5165 l
213.275 15.6430 l
215.202 16.8731 l
217.122 18.1651 l
219.097 19.5626 l
220.837 20.8512 l
222.796 22.3663 l
224.763 23.9566 l
226.658 25.5543 l
228.379 27.0607 l
230.426 28.9206 l
232.159 30.5547 l
234.176 32.5229 l
235.961 34.3255 l
237.920 36.3687 l
239.785 38.3779 l
241.731 40.5404 l
243.518 42.5856 l
245.446 44.8555 l
247.448 47.2834 l
249.191 49.4551 l
251.073 51.8614 l
253.018 54.4137 l
254.920 56.9759 l
256.761 59.5163 l
258.805 62.4078 l
260.641 65.0695 l
262.602 67.9777 l
264.379 70.6722 l
266.322 73.6824 l
268.149 76.5762 l
270.060 79.6647 l
271.928 82.7472 l
273.883 86.0409 l
275.767 89.2776 l
277.693 92.6530 l
279.603 96.0657 l
281.358 99.2590 l
283.370 102.986 l
285.169 106.381 l
287.087 110.064 l
288.923 113.651 l
290.962 117.704 l
292.728 121.274 l
294.731 125.393 l
296.558 129.209 l
298.555 133.451 l
300.279 137.169 l
302.242 141.467 l
304.138 145.685 l
306.033 149.963 l
307.921 154.290 l
309.735 158.506 l
311.695 163.130 l
313.564 167.601 l
315.531 172.373 l
317.311 176.752 l
319.278 181.659 l
321.163 186.422 l
323.043 191.238 l
325.007 196.335 l
326.815 201.090 l
328.668 206.020 l
330.713 211.535 l
332.564 216.593 l
334.458 221.828 l
336.384 227.218 l
338.154 232.231 l
340.041 237.636 l
341.914 243.062 l
343.917 248.936 l
345.685 254.179 l
347.724 260.297 l
349.565 265.882 l
351.386 271.468 l
353.344 277.540 l
355.310 283.706 l
357.099 289.375 l
358.999 295.459 l
360.853 301.457 l
362.863 308.029 l
364.602 313.774 l
366.599 320.439 l
368.477 326.768 l
370.336 333.099 l
372.197 339.496 l
374.095 346.085 l
376.107 353.139 l
377.952 359.670 l
379.773 366.176 l
381.719 373.197 l
383.662 380.270 l
385.493 387.000 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
9.00000 160.000 m
385.493 160.000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
306 181 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
9.00000 160.000 m
9.00000 164.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 171 7 13 rc
newpath
16.7900 178.438 m
8.21000 178.438 l
8.21000 177.762 l
16.7900 177.762 l
h
f
Q
newpath
15.6601 175.030 m
15.9056 174.450 16.2155 174.003 16.5900 173.687  c
16.9646 173.372 17.4311 173.214 17.9897 173.214  c
18.6795 173.214 19.2085 173.439 19.5766 173.887  c
19.8559 174.222 19.9956 174.579 19.9956 174.960  c
19.9956 175.586 19.6020 176.234 18.8149 176.902  c
19.3439 177.110 19.7438 177.406 20.0146 177.791  c
20.2854 178.176 20.4209 178.629 20.4209 179.149  c
20.4209 179.894 20.1839 180.540 19.7099 181.085  c
19.0921 181.796 18.1971 182.152 17.0249 182.152  c
16.4451 182.152 16.0505 182.080 15.8410 181.936  c
15.6315 181.792 15.5268 181.638 15.5268 181.473  c
15.5268 181.350 15.5765 181.242 15.6760 181.149  c
15.7754 181.056 15.8950 181.009 16.0346 181.009  c
16.1404 181.009 16.2483 181.026 16.3584 181.060  c
16.4303 181.081 16.5932 181.158 16.8471 181.292  c
17.1010 181.425 17.2766 181.504 17.3740 181.530  c
17.5306 181.576 17.6977 181.600 17.8754 181.600  c
18.3071 181.600 18.6827 181.432 19.0022 181.098  c
19.3217 180.764 19.4814 180.368 19.4814 179.911  c
19.4814 179.577 19.4073 179.251 19.2592 178.934  c
19.1492 178.697 19.0286 178.517 18.8974 178.394  c
18.7154 178.225 18.4658 178.071 18.1484 177.934  c
17.8310 177.796 17.5073 177.728 17.1772 177.728  c
16.9741 177.728 l
16.9741 177.537 l
17.3084 177.495 17.6438 177.374 17.9802 177.175  c
18.3166 176.976 18.5610 176.737 18.7133 176.458  c
18.8657 176.179 18.9418 175.872 18.9418 175.538  c
18.9418 175.102 18.8054 174.749 18.5324 174.481  c
18.2595 174.212 17.9199 174.078 17.5136 174.078  c
16.8577 174.078 16.3097 174.429 15.8696 175.131  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
84.0000 160.000 m
84.0000 164.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
81 171 7 13 rc
newpath
91.7900 178.438 m
83.2100 178.438 l
83.2100 177.762 l
91.7900 177.762 l
h
f
Q
newpath
95.9604 180.343 m
95.3574 182.000 l
90.2793 182.000 l
90.2793 181.765 l
91.7731 180.402 92.8247 179.289 93.4340 178.426  c
94.0434 177.563 94.3481 176.773 94.3481 176.058  c
94.3481 175.512 94.1809 175.064 93.8466 174.712  c
93.5123 174.361 93.1124 174.186 92.6469 174.186  c
92.2238 174.186 91.8439 174.309 91.5075 174.557  c
91.1711 174.804 90.9225 175.167 90.7617 175.646  c
90.5268 175.646 l
90.6326 174.863 90.9045 174.262 91.3425 173.843  c
91.7805 173.424 92.3274 173.214 92.9834 173.214  c
93.6816 173.214 94.2645 173.439 94.7321 173.887  c
95.1997 174.336 95.4335 174.865 95.4335 175.474  c
95.4335 175.910 95.3320 176.346 95.1289 176.782  c
94.8157 177.467 94.3079 178.193 93.6054 178.959  c
92.5517 180.110 91.8937 180.804 91.6313 181.041  c
93.8784 181.041 l
94.3354 181.041 94.6560 181.024 94.8400 180.990  c
95.0241 180.956 95.1902 180.888 95.3383 180.784  c
95.4864 180.680 95.6155 180.533 95.7255 180.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
160.000 160.000 m
160.000 164.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
156 171 7 13 rc
newpath
166.790 178.438 m
158.210 178.438 l
158.210 177.762 l
166.790 177.762 l
h
f
Q
newpath
166.523 174.236 m
168.618 173.214 l
168.827 173.214 l
168.827 180.482 l
168.827 180.965 168.847 181.265 168.887 181.384  c
168.928 181.502 169.011 181.593 169.138 181.657  c
169.265 181.720 169.523 181.756 169.913 181.765  c
169.913 182.000 l
166.675 182.000 l
166.675 181.765 l
167.082 181.756 167.344 181.721 167.462 181.660  c
167.581 181.599 167.663 181.516 167.710 181.412  c
167.757 181.309 167.780 180.999 167.780 180.482  c
167.780 175.836 l
167.780 175.210 167.759 174.808 167.716 174.630  c
167.687 174.495 167.633 174.395 167.554 174.332  c
167.476 174.268 167.382 174.236 167.272 174.236  c
167.115 174.236 166.897 174.302 166.618 174.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
235.000 160.000 m
235.000 164.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
230.469 175.747 m
230.469 174.765 230.617 173.920 230.914 173.211  c
231.210 172.502 231.603 171.974 232.094 171.627  c
232.475 171.352 232.869 171.214 233.275 171.214  c
233.935 171.214 234.528 171.551 235.052 172.224  c
235.708 173.057 236.036 174.187 236.036 175.613  c
236.036 176.612 235.892 177.460 235.605 178.159  c
235.317 178.857 234.950 179.364 234.503 179.679  c
234.057 179.994 233.626 180.152 233.211 180.152  c
232.391 180.152 231.707 179.667 231.161 178.698  c
230.700 177.882 230.469 176.898 230.469 175.747  c
h
231.713 175.905 m
231.713 177.090 231.859 178.057 232.151 178.806  c
232.393 179.437 232.752 179.752 233.231 179.752  c
233.459 179.752 233.696 179.649 233.941 179.444  c
234.187 179.239 234.373 178.895 234.500 178.413  c
234.695 177.685 234.792 176.659 234.792 175.334  c
234.792 174.352 234.690 173.533 234.487 172.877  c
234.335 172.391 234.138 172.046 233.897 171.843  c
233.724 171.703 233.514 171.633 233.269 171.633  c
232.981 171.633 232.725 171.762 232.501 172.021  c
232.196 172.372 231.988 172.924 231.878 173.677  c
231.768 174.431 231.713 175.173 231.713 175.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
310.000 160.000 m
310.000 164.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
313.523 174.236 m
315.618 173.214 l
315.827 173.214 l
315.827 180.482 l
315.827 180.965 315.847 181.265 315.887 181.384  c
315.928 181.502 316.011 181.593 316.138 181.657  c
316.265 181.720 316.523 181.756 316.913 181.765  c
316.913 182.000 l
313.675 182.000 l
313.675 181.765 l
314.082 181.756 314.344 181.721 314.462 181.660  c
314.581 181.599 314.663 181.516 314.710 181.412  c
314.757 181.309 314.780 180.999 314.780 180.482  c
314.780 175.836 l
314.780 175.210 314.759 174.808 314.716 174.630  c
314.687 174.495 314.633 174.395 314.554 174.332  c
314.476 174.268 314.382 174.236 314.272 174.236  c
314.115 174.236 313.897 174.302 313.618 174.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
385.000 160.000 m
385.000 164.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
392.960 180.343 m
392.357 182.000 l
387.279 182.000 l
387.279 181.765 l
388.773 180.402 389.824 179.289 390.434 178.426  c
391.043 177.563 391.348 176.773 391.348 176.058  c
391.348 175.512 391.181 175.064 390.846 174.712  c
390.512 174.361 390.112 174.186 389.647 174.186  c
389.223 174.186 388.844 174.309 388.507 174.557  c
388.171 174.804 387.922 175.167 387.761 175.646  c
387.526 175.646 l
387.632 174.863 387.904 174.262 388.342 173.843  c
388.780 173.424 389.327 173.214 389.983 173.214  c
390.681 173.214 391.264 173.439 391.732 173.887  c
392.199 174.336 392.433 174.865 392.433 175.474  c
392.433 175.910 392.332 176.346 392.128 176.782  c
391.815 177.467 391.307 178.193 390.605 178.959  c
389.551 180.110 388.893 180.804 388.631 181.041  c
390.878 181.041 l
391.335 181.041 391.656 181.024 391.840 180.990  c
392.024 180.956 392.190 180.888 392.338 180.784  c
392.486 180.680 392.615 180.533 392.725 180.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
47.0000 160.000 m
47.0000 162.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
122.000 160.000 m
122.000 162.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
197.000 160.000 m
197.000 162.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
273.000 160.000 m
273.000 162.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
348.000 160.000 m
348.000 162.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
235.000 387.000 m
235.000 4.82177 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
199 75 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
235.000 362.000 m
231.000 362.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
216 360 7 13 rc
newpath
226.790 367.438 m
218.210 367.438 l
218.210 366.762 l
226.790 366.762 l
h
f
Q
newpath
227.494 366.664 m
226.813 366.106 226.374 365.657 226.177 365.318  c
225.980 364.980 225.882 364.629 225.882 364.265  c
225.882 363.706 226.098 363.225 226.529 362.821  c
226.961 362.416 227.534 362.214 228.250 362.214  c
228.944 362.214 229.502 362.403 229.925 362.779  c
230.349 363.156 230.560 363.585 230.560 364.068  c
230.560 364.390 230.446 364.717 230.217 365.052  c
229.989 365.386 229.513 365.780 228.789 366.232  c
229.534 366.808 230.027 367.261 230.268 367.591  c
230.590 368.022 230.751 368.477 230.751 368.956  c
230.751 369.561 230.520 370.078 230.059 370.508  c
229.597 370.937 228.992 371.152 228.243 371.152  c
227.426 371.152 226.790 370.896 226.333 370.384  c
225.969 369.973 225.787 369.525 225.787 369.038  c
225.787 368.657 225.915 368.280 226.171 367.905  c
226.427 367.531 226.868 367.117 227.494 366.664  c
h
228.491 365.985 m
228.999 365.528 229.320 365.167 229.456 364.903  c
229.591 364.638 229.659 364.339 229.659 364.004  c
229.659 363.560 229.534 363.212 229.284 362.960  c
229.035 362.708 228.694 362.583 228.262 362.583  c
227.831 362.583 227.479 362.707 227.209 362.957  c
226.938 363.207 226.802 363.499 226.802 363.833  c
226.802 364.053 226.858 364.273 226.970 364.493  c
227.083 364.713 227.242 364.923 227.450 365.122  c
h
227.793 366.905 m
227.441 367.202 227.181 367.524 227.012 367.873  c
226.842 368.222 226.758 368.600 226.758 369.006  c
226.758 369.552 226.907 369.989 227.205 370.317  c
227.504 370.645 227.884 370.809 228.345 370.809  c
228.802 370.809 229.168 370.680 229.443 370.422  c
229.718 370.164 229.856 369.851 229.856 369.482  c
229.856 369.178 229.775 368.905 229.614 368.664  c
229.314 368.215 228.707 367.629 227.793 366.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
235.000 311.000 m
231.000 311.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
216 310 7 13 rc
newpath
226.790 317.438 m
218.210 317.438 l
218.210 316.762 l
226.790 316.762 l
h
f
Q
newpath
230.827 312.214 m
230.827 312.449 l
230.268 312.504 229.812 312.615 229.459 312.783  c
229.105 312.950 228.756 313.205 228.411 313.547  c
228.067 313.890 227.781 314.272 227.554 314.693  c
227.328 315.114 227.139 315.615 226.986 316.194  c
227.596 315.775 228.207 315.566 228.821 315.566  c
229.409 315.566 229.919 315.803 230.351 316.277  c
230.782 316.751 230.998 317.360 230.998 318.105  c
230.998 318.824 230.780 319.480 230.344 320.073  c
229.820 320.792 229.126 321.152 228.262 321.152  c
227.674 321.152 227.175 320.957 226.764 320.568  c
225.960 319.810 225.558 318.829 225.558 317.623  c
225.558 316.852 225.713 316.120 226.022 315.426  c
226.330 314.732 226.772 314.117 227.345 313.579  c
227.918 313.042 228.467 312.680 228.992 312.494  c
229.517 312.307 230.006 312.214 230.459 312.214  c
h
226.878 316.658 m
226.802 317.229 226.764 317.690 226.764 318.042  c
226.764 318.448 226.839 318.889 226.990 319.365  c
227.140 319.841 227.363 320.219 227.659 320.498  c
227.875 320.697 228.137 320.796 228.446 320.796  c
228.814 320.796 229.144 320.623 229.433 320.276  c
229.723 319.929 229.868 319.434 229.868 318.791  c
229.868 318.067 229.724 317.441 229.437 316.912  c
229.149 316.383 228.740 316.118 228.211 316.118  c
228.051 316.118 227.878 316.152 227.694 316.220  c
227.510 316.287 227.238 316.433 226.878 316.658  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
235.000 261.000 m
231.000 261.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
216 259 7 13 rc
newpath
226.790 266.438 m
218.210 266.438 l
218.210 265.762 l
226.790 265.762 l
h
f
Q
newpath
231.049 266.826 m
231.049 267.727 l
229.894 267.727 l
229.894 270.000 l
228.846 270.000 l
228.846 267.727 l
225.203 267.727 l
225.203 266.915 l
229.195 261.214 l
229.894 261.214 l
229.894 266.826 l
h
228.846 266.826 m
228.846 262.554 l
225.825 266.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
235.000 210.000 m
231.000 210.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
216 209 7 13 rc
newpath
226.790 216.438 m
218.210 216.438 l
218.210 215.762 l
226.790 215.762 l
h
f
Q
newpath
230.960 218.343 m
230.357 220.000 l
225.279 220.000 l
225.279 219.765 l
226.773 218.402 227.824 217.289 228.434 216.426  c
229.043 215.563 229.348 214.773 229.348 214.058  c
229.348 213.512 229.181 213.064 228.846 212.712  c
228.512 212.361 228.112 212.186 227.647 212.186  c
227.223 212.186 226.844 212.309 226.507 212.557  c
226.171 212.804 225.922 213.167 225.761 213.646  c
225.526 213.646 l
225.632 212.863 225.904 212.262 226.342 211.843  c
226.780 211.424 227.327 211.214 227.983 211.214  c
228.681 211.214 229.264 211.439 229.732 211.887  c
230.199 212.336 230.433 212.865 230.433 213.474  c
230.433 213.910 230.332 214.346 230.128 214.782  c
229.815 215.467 229.307 216.193 228.605 216.959  c
227.551 218.110 226.893 218.804 226.631 219.041  c
228.878 219.041 l
229.335 219.041 229.656 219.024 229.840 218.990  c
230.024 218.956 230.190 218.888 230.338 218.784  c
230.486 218.680 230.615 218.533 230.725 218.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
235.000 160.000 m
231.000 160.000 l
S
Q
q
0 w
newpath
235.000 109.000 m
231.000 109.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
230.960 117.343 m
230.357 119.000 l
225.279 119.000 l
225.279 118.765 l
226.773 117.402 227.824 116.289 228.434 115.426  c
229.043 114.563 229.348 113.773 229.348 113.058  c
229.348 112.512 229.181 112.064 228.846 111.712  c
228.512 111.361 228.112 111.186 227.647 111.186  c
227.223 111.186 226.844 111.309 226.507 111.557  c
226.171 111.804 225.922 112.167 225.761 112.646  c
225.526 112.646 l
225.632 111.863 225.904 111.262 226.342 110.843  c
226.780 110.424 227.327 110.214 227.983 110.214  c
228.681 110.214 229.264 110.439 229.732 110.887  c
230.199 111.336 230.433 111.865 230.433 112.474  c
230.433 112.910 230.332 113.346 230.128 113.782  c
229.815 114.467 229.307 115.193 228.605 115.959  c
227.551 117.110 226.893 117.804 226.631 118.041  c
228.878 118.041 l
229.335 118.041 229.656 118.024 229.840 117.990  c
230.024 117.956 230.190 117.888 230.338 117.784  c
230.486 117.680 230.615 117.533 230.725 117.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
235.000 59.0000 m
231.000 59.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
231.049 64.8261 m
231.049 65.7275 l
229.894 65.7275 l
229.894 68.0000 l
228.846 68.0000 l
228.846 65.7275 l
225.203 65.7275 l
225.203 64.9150 l
229.195 59.2148 l
229.894 59.2148 l
229.894 64.8261 l
h
228.846 64.8261 m
228.846 60.5542 l
225.825 64.8261 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
235.000 8.00000 m
231.000 8.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
230.827 8.21484 m
230.827 8.44970 l
230.268 8.50472 229.812 8.61580 229.459 8.78295  c
229.105 8.95011 228.756 9.20507 228.411 9.54785  c
228.067 9.89062 227.781 10.2725 227.554 10.6936  c
227.328 11.1146 227.139 11.6150 226.986 12.1948  c
227.596 11.7758 228.207 11.5664 228.821 11.5664  c
229.409 11.5664 229.919 11.8033 230.351 12.2773  c
230.782 12.7513 230.998 13.3606 230.998 14.1054  c
230.998 14.8248 230.780 15.4807 230.344 16.0732  c
229.820 16.7926 229.126 17.1523 228.262 17.1523  c
227.674 17.1523 227.175 16.9576 226.764 16.5683  c
225.960 15.8108 225.558 14.8291 225.558 13.6230  c
225.558 12.8528 225.713 12.1207 226.022 11.4267  c
226.330 10.7327 226.772 10.1170 227.345 9.57959  c
227.918 9.04215 228.467 8.68033 228.992 8.49414  c
229.517 8.30794 230.006 8.21484 230.459 8.21484  c
h
226.878 12.6582 m
226.802 13.2294 226.764 13.6907 226.764 14.0419  c
226.764 14.4482 226.839 14.8894 226.990 15.3654  c
227.140 15.8415 227.363 16.2192 227.659 16.4985  c
227.875 16.6974 228.137 16.7968 228.446 16.7968  c
228.814 16.7968 229.144 16.6233 229.433 16.2763  c
229.723 15.9293 229.868 15.4342 229.868 14.7910  c
229.868 14.0673 229.724 13.4410 229.437 12.9121  c
229.149 12.3831 228.740 12.1186 228.211 12.1186  c
228.051 12.1186 227.878 12.1525 227.694 12.2202  c
227.510 12.2879 227.238 12.4339 226.878 12.6582  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
235.000 387.000 m
233.000 387.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
235.000 336.000 m
233.000 336.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
235.000 286.000 m
233.000 286.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
235.000 235.000 m
233.000 235.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
235.000 185.000 m
233.000 185.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
235.000 134.000 m
233.000 134.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
235.000 84.0000 m
233.000 84.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
235.000 33.0000 m
233.000 33.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
