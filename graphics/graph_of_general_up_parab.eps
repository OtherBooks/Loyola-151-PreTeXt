%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, August 19, 2014 7:22:09 AM EDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
2.00000 w
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
1.00000 w
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
0 J
1 j
q
Q
2 J
0 j
2.00000 w
0 J
1 j
q
q
7.00000 2.59066E-3 381.493 388.997 rc
newpath
9.00000 3.00259 m
10.9794 11.0359 l
12.7017 17.9566 l
14.6386 25.6628 l
16.5884 33.3380 l
18.5289 40.8949 l
20.3280 47.8282 l
22.1908 54.9333 l
24.1174 62.2023 l
26.0378 69.3679 l
28.0131 76.6553 l
29.7530 83.0040 l
31.7117 90.0726 l
33.6785 97.0865 l
35.5738 103.766 l
37.2949 109.765 l
39.3415 116.814 l
41.0752 122.715 l
43.0920 129.496 l
44.8771 135.426 l
46.8358 141.852 l
48.7008 147.894 l
50.6468 154.118 l
52.4338 159.761 l
54.3614 165.771 l
56.3636 171.927 l
58.1065 177.216 l
59.9888 182.854 l
61.9335 188.598 l
63.8360 194.138 l
65.6768 199.424 l
67.7206 205.206 l
69.5571 210.325 l
71.5180 215.710 l
73.2948 220.517 l
75.2374 225.695 l
77.0651 230.492 l
78.9757 235.429 l
80.8436 240.179 l
82.7991 245.071 l
84.6825 249.704 l
86.6086 254.362 l
88.5187 258.903 l
90.2739 263.005 l
92.2855 267.625 l
94.0848 271.683 l
96.0031 275.932 l
97.8393 279.925 l
99.8780 284.272 l
101.643 287.964 l
103.647 292.072 l
105.473 295.741 l
107.471 299.670 l
109.194 302.992 l
111.157 306.696 l
113.053 310.195 l
114.948 313.614 l
116.836 316.942 l
118.650 320.067 l
120.611 323.366 l
122.479 326.431 l
124.446 329.576 l
126.226 332.351 l
128.194 335.337 l
130.078 338.119 l
131.958 340.818 l
133.922 343.554 l
135.731 346.001 l
137.583 348.433 l
139.628 351.033 l
141.480 353.308 l
143.374 355.558 l
145.299 357.766 l
147.070 359.725 l
148.957 361.738 l
150.829 363.660 l
152.832 365.632 l
154.600 367.300 l
156.640 369.140 l
158.480 370.723 l
160.301 372.217 l
162.260 373.743 l
164.226 375.192 l
166.015 376.438 l
167.915 377.685 l
169.769 378.826 l
171.778 379.979 l
173.517 380.906 l
175.515 381.890 l
177.392 382.736 l
179.252 383.499 l
181.113 384.187 l
183.011 384.812 l
185.023 385.388 l
186.867 385.840 l
188.688 386.214 l
190.635 386.534 l
192.577 386.771 l
194.320 386.915 l
196.386 387.000 l
198.114 386.999 l
200.135 386.917 l
202.064 386.756 l
203.786 386.544 l
205.723 386.229 l
207.673 385.830 l
209.613 385.350 l
211.412 384.833 l
213.275 384.223 l
215.202 383.514 l
217.122 382.727 l
219.097 381.834 l
220.837 380.977 l
222.796 379.934 l
224.763 378.803 l
226.658 377.634 l
228.379 376.504 l
230.426 375.078 l
232.159 373.799 l
234.176 372.229 l
235.961 370.765 l
237.920 369.080 l
239.785 367.399 l
241.731 365.564 l
243.518 363.806 l
245.446 361.833 l
247.448 359.698 l
249.191 357.769 l
251.073 355.611 l
253.018 353.302 l
254.920 350.963 l
256.761 348.625 l
258.805 345.944 l
260.641 343.457 l
262.602 340.721 l
264.379 338.170 l
266.322 335.303 l
268.149 332.531 l
270.060 329.555 l
271.928 326.570 l
273.883 323.363 l
275.767 320.197 l
277.693 316.879 l
279.603 313.509 l
281.358 310.343 l
283.370 306.632 l
285.169 303.238 l
287.087 299.543 l
288.923 295.931 l
290.962 291.835 l
292.728 288.216 l
294.731 284.026 l
296.558 280.131 l
298.555 275.789 l
300.279 271.972 l
302.242 267.547 l
304.138 263.193 l
306.033 258.765 l
307.921 254.275 l
309.735 249.889 l
311.695 245.067 l
313.564 240.394 l
315.531 235.394 l
317.311 230.796 l
319.278 225.634 l
321.163 220.612 l
323.043 215.524 l
325.007 210.129 l
326.815 205.086 l
328.668 199.847 l
330.713 193.977 l
332.564 188.583 l
334.458 182.991 l
336.384 177.223 l
338.154 171.851 l
340.041 166.050 l
341.914 160.217 l
343.917 153.893 l
345.685 148.240 l
347.724 141.633 l
349.565 135.594 l
351.386 129.547 l
353.344 122.963 l
355.310 116.269 l
357.099 110.106 l
358.999 103.485 l
360.853 96.9492 l
362.863 89.7792 l
364.602 83.5045 l
366.599 76.2169 l
368.477 69.2873 l
370.336 62.3494 l
372.197 55.3309 l
374.095 48.0952 l
376.107 40.3403 l
377.952 33.1527 l
379.773 25.9852 l
381.719 18.2439 l
383.662 10.4375 l
385.493 3.00259 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
1.00000 w
2 J
0 j
q
0 J
1 j
newpath
9.00000 269.000 m
385.493 269.000 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
268 290 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
9.00000 269.000 m
9.00000 273.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 281 7 13 rc
newpath
16.7900 288.438 m
8.21000 288.438 l
8.21000 287.762 l
16.7900 287.762 l
h
f
Q
newpath
20.9604 290.343 m
20.3574 292.000 l
15.2793 292.000 l
15.2793 291.765 l
16.7731 290.402 17.8247 289.289 18.4340 288.426  c
19.0434 287.563 19.3481 286.773 19.3481 286.058  c
19.3481 285.512 19.1809 285.064 18.8466 284.712  c
18.5123 284.361 18.1124 284.186 17.6469 284.186  c
17.2238 284.186 16.8439 284.309 16.5075 284.557  c
16.1711 284.804 15.9225 285.167 15.7617 285.646  c
15.5268 285.646 l
15.6326 284.863 15.9045 284.262 16.3425 283.843  c
16.7805 283.424 17.3274 283.214 17.9834 283.214  c
18.6816 283.214 19.2645 283.439 19.7321 283.887  c
20.1997 284.336 20.4335 284.865 20.4335 285.474  c
20.4335 285.910 20.3320 286.346 20.1289 286.782  c
19.8157 287.467 19.3079 288.193 18.6054 288.959  c
17.5517 290.110 16.8937 290.804 16.6313 291.041  c
18.8784 291.041 l
19.3354 291.041 19.6560 291.024 19.8400 290.990  c
20.0241 290.956 20.1902 290.888 20.3383 290.784  c
20.4864 290.680 20.6155 290.533 20.7255 290.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
84.0000 269.000 m
84.0000 273.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
81 281 7 13 rc
newpath
91.7900 288.438 m
83.2100 288.438 l
83.2100 287.762 l
91.7900 287.762 l
h
f
Q
newpath
91.5234 284.236 m
93.6181 283.214 l
93.8276 283.214 l
93.8276 290.482 l
93.8276 290.965 93.8477 291.265 93.8879 291.384  c
93.9281 291.502 94.0117 291.593 94.1386 291.657  c
94.2656 291.720 94.5237 291.756 94.9130 291.765  c
94.9130 292.000 l
91.6757 292.000 l
91.6757 291.765 l
92.0820 291.756 92.3444 291.721 92.4628 291.660  c
92.5813 291.599 92.6639 291.516 92.7104 291.412  c
92.7570 291.309 92.7802 290.999 92.7802 290.482  c
92.7802 285.836 l
92.7802 285.210 92.7591 284.808 92.7168 284.630  c
92.6871 284.495 92.6332 284.395 92.5549 284.332  c
92.4766 284.268 92.3824 284.236 92.2724 284.236  c
92.1158 284.236 91.8979 284.302 91.6186 284.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
160.000 269.000 m
160.000 273.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
155.469 285.747 m
155.469 284.765 155.617 283.920 155.914 283.211  c
156.210 282.502 156.603 281.974 157.094 281.627  c
157.475 281.352 157.869 281.214 158.275 281.214  c
158.935 281.214 159.528 281.551 160.052 282.224  c
160.708 283.057 161.036 284.187 161.036 285.613  c
161.036 286.612 160.892 287.460 160.605 288.159  c
160.317 288.857 159.950 289.364 159.503 289.679  c
159.057 289.994 158.626 290.152 158.211 290.152  c
157.391 290.152 156.707 289.667 156.161 288.698  c
155.700 287.882 155.469 286.898 155.469 285.747  c
h
156.713 285.905 m
156.713 287.090 156.859 288.057 157.151 288.806  c
157.393 289.437 157.752 289.752 158.231 289.752  c
158.459 289.752 158.696 289.649 158.941 289.444  c
159.187 289.239 159.373 288.895 159.500 288.413  c
159.695 287.685 159.792 286.659 159.792 285.334  c
159.792 284.352 159.690 283.533 159.487 282.877  c
159.335 282.391 159.138 282.046 158.897 281.843  c
158.724 281.703 158.514 281.633 158.269 281.633  c
157.981 281.633 157.725 281.762 157.501 282.021  c
157.196 282.372 156.988 282.924 156.878 283.677  c
156.768 284.431 156.713 285.173 156.713 285.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
235.000 269.000 m
235.000 273.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
237.523 284.236 m
239.618 283.214 l
239.827 283.214 l
239.827 290.482 l
239.827 290.965 239.847 291.265 239.887 291.384  c
239.928 291.502 240.011 291.593 240.138 291.657  c
240.265 291.720 240.523 291.756 240.913 291.765  c
240.913 292.000 l
237.675 292.000 l
237.675 291.765 l
238.082 291.756 238.344 291.721 238.462 291.660  c
238.581 291.599 238.663 291.516 238.710 291.412  c
238.757 291.309 238.780 290.999 238.780 290.482  c
238.780 285.836 l
238.780 285.210 238.759 284.808 238.716 284.630  c
238.687 284.495 238.633 284.395 238.554 284.332  c
238.476 284.268 238.382 284.236 238.272 284.236  c
238.115 284.236 237.897 284.302 237.618 284.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
310.000 269.000 m
310.000 273.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
317.960 290.343 m
317.357 292.000 l
312.279 292.000 l
312.279 291.765 l
313.773 290.402 314.824 289.289 315.434 288.426  c
316.043 287.563 316.348 286.773 316.348 286.058  c
316.348 285.512 316.181 285.064 315.846 284.712  c
315.512 284.361 315.112 284.186 314.647 284.186  c
314.223 284.186 313.844 284.309 313.507 284.557  c
313.171 284.804 312.922 285.167 312.761 285.646  c
312.526 285.646 l
312.632 284.863 312.904 284.262 313.342 283.843  c
313.780 283.424 314.327 283.214 314.983 283.214  c
315.681 283.214 316.264 283.439 316.732 283.887  c
317.199 284.336 317.433 284.865 317.433 285.474  c
317.433 285.910 317.332 286.346 317.128 286.782  c
316.815 287.467 316.307 288.193 315.605 288.959  c
314.551 290.110 313.893 290.804 313.631 291.041  c
315.878 291.041 l
316.335 291.041 316.656 291.024 316.840 290.990  c
317.024 290.956 317.190 290.888 317.338 290.784  c
317.486 290.680 317.615 290.533 317.725 290.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
385.000 269.000 m
385.000 273.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
387.660 285.030 m
387.905 284.450 388.215 284.003 388.590 283.687  c
388.964 283.372 389.431 283.214 389.989 283.214  c
390.679 283.214 391.208 283.439 391.576 283.887  c
391.856 284.222 391.995 284.579 391.995 284.960  c
391.995 285.586 391.602 286.234 390.814 286.902  c
391.343 287.110 391.743 287.406 392.014 287.791  c
392.285 288.176 392.420 288.629 392.420 289.149  c
392.420 289.894 392.183 290.540 391.710 291.085  c
391.092 291.796 390.197 292.152 389.024 292.152  c
388.445 292.152 388.050 292.080 387.841 291.936  c
387.631 291.792 387.526 291.638 387.526 291.473  c
387.526 291.350 387.576 291.242 387.676 291.149  c
387.775 291.056 387.895 291.009 388.034 291.009  c
388.140 291.009 388.248 291.026 388.358 291.060  c
388.430 291.081 388.593 291.158 388.847 291.292  c
389.101 291.425 389.276 291.504 389.374 291.530  c
389.530 291.576 389.697 291.600 389.875 291.600  c
390.307 291.600 390.682 291.432 391.002 291.098  c
391.321 290.764 391.481 290.368 391.481 289.911  c
391.481 289.577 391.407 289.251 391.259 288.934  c
391.149 288.697 391.028 288.517 390.897 288.394  c
390.715 288.225 390.465 288.071 390.148 287.934  c
389.831 287.796 389.507 287.728 389.177 287.728  c
388.974 287.728 l
388.974 287.537 l
389.308 287.495 389.643 287.374 389.980 287.175  c
390.316 286.976 390.561 286.737 390.713 286.458  c
390.865 286.179 390.941 285.872 390.941 285.538  c
390.941 285.102 390.805 284.749 390.532 284.481  c
390.259 284.212 389.919 284.078 389.513 284.078  c
388.857 284.078 388.309 284.429 387.869 285.131  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
47.0000 269.000 m
47.0000 271.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
122.000 269.000 m
122.000 271.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
197.000 269.000 m
197.000 271.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
273.000 269.000 m
273.000 271.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
348.000 269.000 m
348.000 271.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
q
0 J
1 j
newpath
160.000 387.000 m
160.000 3.00259 l
S
Q
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 0 0 ] concat
q
124 129 8 15 rc
Q
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0 0 1.00000 0 0 ] concat
q
q
0 w
newpath
160.000 351.000 m
156.000 351.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
141 350 7 13 rc
newpath
151.790 357.438 m
143.210 357.438 l
143.210 356.762 l
151.790 356.762 l
h
f
Q
newpath
156.049 357.826 m
156.049 358.727 l
154.894 358.727 l
154.894 361.000 l
153.846 361.000 l
153.846 358.727 l
150.203 358.727 l
150.203 357.915 l
154.195 352.214 l
154.894 352.214 l
154.894 357.826 l
h
153.846 357.826 m
153.846 353.554 l
150.825 357.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
160.000 310.000 m
156.000 310.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
141 309 7 13 rc
newpath
151.790 316.438 m
143.210 316.438 l
143.210 315.762 l
151.790 315.762 l
h
f
Q
newpath
155.960 318.343 m
155.357 320.000 l
150.279 320.000 l
150.279 319.765 l
151.773 318.402 152.824 317.289 153.434 316.426  c
154.043 315.563 154.348 314.773 154.348 314.058  c
154.348 313.512 154.181 313.064 153.846 312.712  c
153.512 312.361 153.112 312.186 152.647 312.186  c
152.223 312.186 151.844 312.309 151.507 312.557  c
151.171 312.804 150.922 313.167 150.761 313.646  c
150.526 313.646 l
150.632 312.863 150.904 312.262 151.342 311.843  c
151.780 311.424 152.327 311.214 152.983 311.214  c
153.681 311.214 154.264 311.439 154.732 311.887  c
155.199 312.336 155.433 312.865 155.433 313.474  c
155.433 313.910 155.332 314.346 155.128 314.782  c
154.815 315.467 154.307 316.193 153.605 316.959  c
152.551 318.110 151.893 318.804 151.631 319.041  c
153.878 319.041 l
154.335 319.041 154.656 319.024 154.840 318.990  c
155.024 318.956 155.190 318.888 155.338 318.784  c
155.486 318.680 155.615 318.533 155.725 318.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
160.000 269.000 m
156.000 269.000 l
S
Q
q
0 w
newpath
160.000 228.000 m
156.000 228.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
155.960 236.343 m
155.357 238.000 l
150.279 238.000 l
150.279 237.765 l
151.773 236.402 152.824 235.289 153.434 234.426  c
154.043 233.563 154.348 232.773 154.348 232.058  c
154.348 231.512 154.181 231.064 153.846 230.712  c
153.512 230.361 153.112 230.186 152.647 230.186  c
152.223 230.186 151.844 230.309 151.507 230.557  c
151.171 230.804 150.922 231.167 150.761 231.646  c
150.526 231.646 l
150.632 230.863 150.904 230.262 151.342 229.843  c
151.780 229.424 152.327 229.214 152.983 229.214  c
153.681 229.214 154.264 229.439 154.732 229.887  c
155.199 230.336 155.433 230.865 155.433 231.474  c
155.433 231.910 155.332 232.346 155.128 232.782  c
154.815 233.467 154.307 234.193 153.605 234.959  c
152.551 236.110 151.893 236.804 151.631 237.041  c
153.878 237.041 l
154.335 237.041 154.656 237.024 154.840 236.990  c
155.024 236.956 155.190 236.888 155.338 236.784  c
155.486 236.680 155.615 236.533 155.725 236.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
160.000 187.000 m
156.000 187.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
156.049 193.826 m
156.049 194.727 l
154.894 194.727 l
154.894 197.000 l
153.846 197.000 l
153.846 194.727 l
150.203 194.727 l
150.203 193.915 l
154.195 188.214 l
154.894 188.214 l
154.894 193.826 l
h
153.846 193.826 m
153.846 189.554 l
150.825 193.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
160.000 146.000 m
156.000 146.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
155.827 147.214 m
155.827 147.449 l
155.268 147.504 154.812 147.615 154.459 147.783  c
154.105 147.950 153.756 148.205 153.411 148.547  c
153.067 148.890 152.781 149.272 152.554 149.693  c
152.328 150.114 152.139 150.615 151.986 151.194  c
152.596 150.775 153.207 150.566 153.821 150.566  c
154.409 150.566 154.919 150.803 155.351 151.277  c
155.782 151.751 155.998 152.360 155.998 153.105  c
155.998 153.824 155.780 154.480 155.344 155.073  c
154.820 155.792 154.126 156.152 153.262 156.152  c
152.674 156.152 152.175 155.957 151.764 155.568  c
150.960 154.810 150.558 153.829 150.558 152.623  c
150.558 151.852 150.713 151.120 151.022 150.426  c
151.330 149.732 151.772 149.117 152.345 148.579  c
152.918 148.042 153.467 147.680 153.992 147.494  c
154.517 147.307 155.006 147.214 155.459 147.214  c
h
151.878 151.658 m
151.802 152.229 151.764 152.690 151.764 153.042  c
151.764 153.448 151.839 153.889 151.990 154.365  c
152.140 154.841 152.363 155.219 152.659 155.498  c
152.875 155.697 153.137 155.796 153.446 155.796  c
153.814 155.796 154.144 155.623 154.433 155.276  c
154.723 154.929 154.868 154.434 154.868 153.791  c
154.868 153.067 154.724 152.441 154.437 151.912  c
154.149 151.383 153.740 151.118 153.211 151.118  c
153.051 151.118 152.878 151.152 152.694 151.220  c
152.510 151.287 152.238 151.433 151.878 151.658  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
160.000 105.000 m
156.000 105.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
152.494 110.664 m
151.813 110.106 151.374 109.657 151.177 109.318  c
150.980 108.980 150.882 108.629 150.882 108.265  c
150.882 107.706 151.098 107.225 151.529 106.821  c
151.961 106.416 152.534 106.214 153.250 106.214  c
153.944 106.214 154.502 106.403 154.925 106.779  c
155.349 107.156 155.560 107.585 155.560 108.068  c
155.560 108.390 155.446 108.717 155.217 109.052  c
154.989 109.386 154.513 109.780 153.789 110.232  c
154.534 110.808 155.027 111.261 155.268 111.591  c
155.590 112.022 155.751 112.477 155.751 112.956  c
155.751 113.561 155.520 114.078 155.059 114.508  c
154.597 114.937 153.992 115.152 153.243 115.152  c
152.426 115.152 151.790 114.896 151.333 114.384  c
150.969 113.973 150.787 113.525 150.787 113.038  c
150.787 112.657 150.915 112.280 151.171 111.905  c
151.427 111.531 151.868 111.117 152.494 110.664  c
h
153.491 109.985 m
153.999 109.528 154.320 109.167 154.456 108.903  c
154.591 108.638 154.659 108.339 154.659 108.004  c
154.659 107.560 154.534 107.212 154.284 106.960  c
154.035 106.708 153.694 106.583 153.262 106.583  c
152.831 106.583 152.479 106.707 152.209 106.957  c
151.938 107.207 151.802 107.499 151.802 107.833  c
151.802 108.053 151.858 108.273 151.970 108.493  c
152.083 108.713 152.242 108.923 152.450 109.122  c
h
152.793 110.905 m
152.441 111.202 152.181 111.524 152.012 111.873  c
151.842 112.222 151.758 112.600 151.758 113.006  c
151.758 113.552 151.907 113.989 152.205 114.317  c
152.504 114.645 152.884 114.809 153.345 114.809  c
153.802 114.809 154.168 114.680 154.443 114.422  c
154.718 114.164 154.856 113.851 154.856 113.482  c
154.856 113.178 154.775 112.905 154.614 112.664  c
154.314 112.215 153.707 111.629 152.793 110.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
160.000 64.0000 m
156.000 64.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
144.523 66.2368 m
146.618 65.2148 l
146.827 65.2148 l
146.827 72.4829 l
146.827 72.9653 146.847 73.2657 146.887 73.3842  c
146.928 73.5027 147.011 73.5937 147.138 73.6572  c
147.265 73.7207 147.523 73.7566 147.913 73.7651  c
147.913 74.0000 l
144.675 74.0000 l
144.675 73.7651 l
145.082 73.7566 145.344 73.7217 145.462 73.6604  c
145.581 73.5990 145.663 73.5165 145.710 73.4128  c
145.757 73.3091 145.780 72.9991 145.780 72.4829  c
145.780 67.8364 l
145.780 67.2101 145.759 66.8081 145.716 66.6303  c
145.687 66.4949 145.633 66.3955 145.554 66.3320  c
145.476 66.2685 145.382 66.2368 145.272 66.2368  c
145.115 66.2368 144.897 66.3024 144.618 66.4335  c
h
150.469 69.7470 m
150.469 68.7653 150.617 67.9200 150.914 67.2111  c
151.210 66.5023 151.603 65.9744 152.094 65.6274  c
152.475 65.3523 152.869 65.2148 153.275 65.2148  c
153.935 65.2148 154.528 65.5512 155.052 66.2241  c
155.708 67.0577 156.036 68.1876 156.036 69.6137  c
156.036 70.6124 155.892 71.4609 155.605 72.1591  c
155.317 72.8574 154.950 73.3641 154.503 73.6794  c
154.057 73.9947 153.626 74.1523 153.211 74.1523  c
152.391 74.1523 151.707 73.6678 151.161 72.6987  c
150.700 71.8820 150.469 70.8981 150.469 69.7470  c
h
151.713 69.9057 m
151.713 71.0906 151.859 72.0576 152.151 72.8066  c
152.393 73.4371 152.752 73.7524 153.231 73.7524  c
153.459 73.7524 153.696 73.6498 153.941 73.4445  c
154.187 73.2393 154.373 72.8955 154.500 72.4130  c
154.695 71.6852 154.792 70.6590 154.792 69.3344  c
154.792 68.3527 154.690 67.5338 154.487 66.8779  c
154.335 66.3912 154.138 66.0463 153.897 65.8432  c
153.724 65.7036 153.514 65.6337 153.269 65.6337  c
152.981 65.6337 152.725 65.7628 152.501 66.0210  c
152.196 66.3722 151.988 66.9244 151.878 67.6777  c
151.768 68.4309 151.713 69.1736 151.713 69.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
160.000 23.0000 m
156.000 23.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
144.523 25.2368 m
146.618 24.2148 l
146.827 24.2148 l
146.827 31.4829 l
146.827 31.9653 146.847 32.2657 146.887 32.3842  c
146.928 32.5027 147.011 32.5937 147.138 32.6572  c
147.265 32.7207 147.523 32.7566 147.913 32.7651  c
147.913 33.0000 l
144.675 33.0000 l
144.675 32.7651 l
145.082 32.7566 145.344 32.7217 145.462 32.6604  c
145.581 32.5990 145.663 32.5165 145.710 32.4128  c
145.757 32.3091 145.780 31.9991 145.780 31.4829  c
145.780 26.8364 l
145.780 26.2101 145.759 25.8081 145.716 25.6303  c
145.687 25.4949 145.633 25.3955 145.554 25.3320  c
145.476 25.2685 145.382 25.2368 145.272 25.2368  c
145.115 25.2368 144.897 25.3024 144.618 25.4335  c
h
155.960 31.3432 m
155.357 33.0000 l
150.279 33.0000 l
150.279 32.7651 l
151.773 31.4025 152.824 30.2895 153.434 29.4262  c
154.043 28.5629 154.348 27.7737 154.348 27.0585  c
154.348 26.5127 154.181 26.0641 153.846 25.7128  c
153.512 25.3616 153.112 25.1860 152.647 25.1860  c
152.223 25.1860 151.844 25.3098 151.507 25.5573  c
151.171 25.8049 150.922 26.1678 150.761 26.6460  c
150.526 26.6460 l
150.632 25.8631 150.904 25.2622 151.342 24.8432  c
151.780 24.4243 152.327 24.2148 152.983 24.2148  c
153.681 24.2148 154.264 24.4391 154.732 24.8877  c
155.199 25.3362 155.433 25.8652 155.433 26.4746  c
155.433 26.9104 155.332 27.3463 155.128 27.7822  c
154.815 28.4677 154.307 29.1935 153.605 29.9594  c
152.551 31.1105 151.893 31.8045 151.631 32.0415  c
153.878 32.0415 l
154.335 32.0415 154.656 32.0245 154.840 31.9907  c
155.024 31.9568 155.190 31.8881 155.338 31.7844  c
155.486 31.6807 155.615 31.5336 155.725 31.3432  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
160.000 372.000 m
158.000 372.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
160.000 331.000 m
158.000 331.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
160.000 290.000 m
158.000 290.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
160.000 249.000 m
158.000 249.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
160.000 208.000 m
158.000 208.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
160.000 167.000 m
158.000 167.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
160.000 126.000 m
158.000 126.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
160.000 85.0000 m
158.000 85.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
160.000 44.0000 m
158.000 44.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
0 w
newpath
160.000 3.00000 m
158.000 3.00000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
2 J
0 j
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
1.00000 w
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
